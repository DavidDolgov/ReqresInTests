{"uuid":"b77f1113-6c8b-48a2-aa71-85f1ffdaab90","historyId":"43b2f42ccd9f03e705a954c06c7c9f2f","testCaseId":"[engine:junit-jupiter]/[class:jdbc.JdbcTest]/[method:readDoctorTest()]","testCaseName":"readDoctorTest()","fullName":"jdbc.JdbcTest.readDoctorTest","labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:jdbc.JdbcTest]/[method:readDoctorTest()]"},{"name":"host","value":"DESKTOP-ANBTT49"},{"name":"thread","value":"7068@DESKTOP-ANBTT49.main(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"jdbc.JdbcTest"},{"name":"testClass","value":"jdbc.JdbcTest"},{"name":"testMethod","value":"readDoctorTest"},{"name":"suite","value":"jdbc.JdbcTest"}],"links":[],"name":"readDoctorTest()","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"expected: <[Doctor(id=0, name=Lucius, surname=Bechtelar, medicalSpecialty=SALMONELLA TYPHI TY2 VI POLYSACCHARIDE ANTIGEN), Doctor(id=0, name=Garry, surname=Wolff, medicalSpecialty=FOLLITROPIN), Doctor(id=0, name=Tresa, surname=Kirlin, medicalSpecialty=TAFLUPROST), Doctor(id=0, name=Dione, surname=Bednar, medicalSpecialty=PHENOXYBENZAMINE HYDROCHLORIDE), Doctor(id=0, name=Nolan, surname=Anderson, medicalSpecialty=HAEMOPHILUS INFLUENZAE TYPE B CAPSULAR POLYSACCHARIDE MENINGOCOCCAL OUTER MEMBRANE PROTEIN CONJUGATE ANTIGEN), Doctor(id=0, name=Shan, surname=Ratke, medicalSpecialty=AMBROSIA ACANTHICARPA POLLEN), Doctor(id=0, name=Elenor, surname=Donnelly, medicalSpecialty=PHENOLSULFONIC ACID), Doctor(id=0, name=Kina, surname=Powlowski, medicalSpecialty=VISCUM ALBUM WHOLE), Doctor(id=0, name=Ron, surname=Hegmann, medicalSpecialty=COCOA), Doctor(id=0, name=Isaiah, surname=Fay, medicalSpecialty=ARGININE HYDROCHLORIDE)]> but was: <[Doctor(id=1, name=Garry, surname=Wolff, medicalSpecialty=FOLLITROPIN), Doctor(id=2, name=Tresa, surname=Kirlin, medicalSpecialty=TAFLUPROST), Doctor(id=3, name=Dione, surname=Bednar, medicalSpecialty=PHENOXYBENZAMINE HYDROCHLORIDE), Doctor(id=4, name=Shan, surname=Ratke, medicalSpecialty=AMBROSIA ACANTHICARPA POLLEN), Doctor(id=5, name=Elenor, surname=Donnelly, medicalSpecialty=PHENOLSULFONIC ACID), Doctor(id=6, name=Kina, surname=Powlowski, medicalSpecialty=VISCUM ALBUM WHOLE), Doctor(id=7, name=Ron, surname=Hegmann, medicalSpecialty=COCOA), Doctor(id=8, name=Isaiah, surname=Fay, medicalSpecialty=ARGININE HYDROCHLORIDE)]>","trace":"org.opentest4j.AssertionFailedError: expected: <[Doctor(id=0, name=Lucius, surname=Bechtelar, medicalSpecialty=SALMONELLA TYPHI TY2 VI POLYSACCHARIDE ANTIGEN), Doctor(id=0, name=Garry, surname=Wolff, medicalSpecialty=FOLLITROPIN), Doctor(id=0, name=Tresa, surname=Kirlin, medicalSpecialty=TAFLUPROST), Doctor(id=0, name=Dione, surname=Bednar, medicalSpecialty=PHENOXYBENZAMINE HYDROCHLORIDE), Doctor(id=0, name=Nolan, surname=Anderson, medicalSpecialty=HAEMOPHILUS INFLUENZAE TYPE B CAPSULAR POLYSACCHARIDE MENINGOCOCCAL OUTER MEMBRANE PROTEIN CONJUGATE ANTIGEN), Doctor(id=0, name=Shan, surname=Ratke, medicalSpecialty=AMBROSIA ACANTHICARPA POLLEN), Doctor(id=0, name=Elenor, surname=Donnelly, medicalSpecialty=PHENOLSULFONIC ACID), Doctor(id=0, name=Kina, surname=Powlowski, medicalSpecialty=VISCUM ALBUM WHOLE), Doctor(id=0, name=Ron, surname=Hegmann, medicalSpecialty=COCOA), Doctor(id=0, name=Isaiah, surname=Fay, medicalSpecialty=ARGININE HYDROCHLORIDE)]> but was: <[Doctor(id=1, name=Garry, surname=Wolff, medicalSpecialty=FOLLITROPIN), Doctor(id=2, name=Tresa, surname=Kirlin, medicalSpecialty=TAFLUPROST), Doctor(id=3, name=Dione, surname=Bednar, medicalSpecialty=PHENOXYBENZAMINE HYDROCHLORIDE), Doctor(id=4, name=Shan, surname=Ratke, medicalSpecialty=AMBROSIA ACANTHICARPA POLLEN), Doctor(id=5, name=Elenor, surname=Donnelly, medicalSpecialty=PHENOLSULFONIC ACID), Doctor(id=6, name=Kina, surname=Powlowski, medicalSpecialty=VISCUM ALBUM WHOLE), Doctor(id=7, name=Ron, surname=Hegmann, medicalSpecialty=COCOA), Doctor(id=8, name=Isaiah, surname=Fay, medicalSpecialty=ARGININE HYDROCHLORIDE)]>\r\n\tat org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)\r\n\tat org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)\r\n\tat org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)\r\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)\r\n\tat org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)\r\n\tat org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)\r\n\tat jdbc.JdbcTest.readDoctorTest(JdbcTest.java:51)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n"},"stage":"finished","description":"","steps":[],"attachments":[],"parameters":[],"start":1750928772995,"stop":1750928773178}